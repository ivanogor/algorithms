public class FourteenthTask {
    public static void main(String[] args) {
        // Инициализируем переменные для хранения максимальной длины последовательности и соответствующего начального числа
        long maxLength = 0;
        long startingNumber = 0;

        // Проходим по всем числам от 1 до 999999
        for (long i = 1; i < 1000000; i++) {
            // Вычисляем длину последовательности Коллатца для текущего числа
            long length = collatzSequenceLength(i);

            // Если длина последовательности больше максимальной, обновляем максимальную длину и сохраняем начальное число
            if (length > maxLength) {
                maxLength = length;
                startingNumber = i;
            }
        }

        // Выводим результат
        System.out.println("Начальный элемент, генерирующий самую длинную последовательность: " + startingNumber);
        System.out.println("Длина последовательности: " + maxLength);
    }

    // Функция для вычисления длины последовательности Коллатца для заданного числа n
    public static long collatzSequenceLength(long n) {
        // Инициализируем длину последовательности значением 1 (само число n)
        long length = 1;

        // Пока n не станет равным 1, продолжаем генерировать последовательность
        while (n != 1) {
            // Если n четное, делим его на 2
            if (n % 2 == 0) {
                n = n / 2;
            }
            // Если n нечетное, умножаем его на 3 и прибавляем 1
            else {
                n = 3 * n + 1;
            }

            // Увеличиваем длину последовательности на 1
            length++;
        }

        // Возвращаем длину последовательности
        return length;
    }
}